% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ng_colours.R
\name{scale_colour_ng_d}
\alias{scale_colour_ng_d}
\alias{scale_fill_ng_d}
\alias{scale_colour_ng_c}
\alias{scale_fill_ng_c}
\title{Colour scale constructor for Nightingale colours}
\usage{
scale_colour_ng_d(..., palette = "all", reverse = FALSE,
  aesthetics = "colour")

scale_fill_ng_d(..., palette = "all", reverse = FALSE,
  aesthetics = "fill")

scale_colour_ng_c(..., palette = "magma", reverse = FALSE,
  values = NULL, space = "Lab", na.value = "grey50",
  guide = "colourbar", aesthetics = "colour")

scale_fill_ng_c(..., palette = "magma", reverse = FALSE,
  values = NULL, space = "Lab", na.value = "grey50",
  guide = "colourbar", aesthetics = "fill")
}
\arguments{
\item{...}{Additional arguments passed to
\code{\link[ggplot2:discrete_scale]{discrete_scale()}} or
\code{\link[ggplot2:continuous_scale]{continuous_scale()}} to control
name, limits, breaks, labels and so forth.}

\item{palette}{Character name of the Nightingale (or viridis) colour palette.}

\item{reverse}{Boolean indicating whether the palette should be reversed.}

\item{aesthetics}{Character string or vector of character strings listing the
name(s) of the aesthetic(s) that this scale works with. This can be
useful, for example, to apply colour settings to the `colour` and
`fill` aesthetics at the same time, via
`aesthetics = c("colour", "fill")`.}

\item{values}{if colours should not be evenly positioned along the gradient
this vector gives the position (between 0 and 1) for each colour in the
\code{colours} vector. See \code{\link[=rescale]{rescale()}} for a convenience function
to map an arbitrary range to between 0 and 1.}

\item{space}{colour space in which to calculate gradient. Must be "Lab" -
other values are deprecated.}

\item{na.value}{Missing values will be replaced with this value.}

\item{guide}{A function used to create a guide or its name. See
\code{\link[=guides]{guides()}} for more info.}
}
\description{
Colour scale constructor for Nightingale colours
}
\examples{
# Example taken from ggplot2::scale_colour_discrete()
dsamp <- ggplot2::diamonds[sample(nrow(ggplot2::diamonds), 1000), ]
d <- ggplot2::ggplot(dsamp, ggplot2::aes(carat, price)) +
  ggplot2::geom_point(ggplot2::aes(colour = clarity)) +
  ggforestplot::scale_colour_ng_d()
print(d)
}
\author{
Ilari Scheinin
}
